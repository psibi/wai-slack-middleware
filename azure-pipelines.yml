# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  CABAL_REINIT_CONFIG: y
  LC_ALL: C.UTF-8
  ENABLE_INSTALL: y
  STACK_UPGRADE: y
  CABAL_CHECK_RELAX: y
  CABAL_NO_SANDBOX: y
  CABAL_HACKAGE_MIRROR: 'hackage.haskell.org:http://hackage.fpcomplete.com'
  PATH: '/bin:/usr/bin'
  TOOLS_DIR: '/opt'
  PACKCHECK_GITHUB_URL: 'https://raw.githubusercontent.com/harendra-kumar/packcheck'
  PACKCHECK_GITHUB_COMMIT: 'c4faad78b3292136a40a228196c3da0e3cac6e0c'
  PACKCHECK_LOCAL_PATH: './packcheck.sh'
  BUILD: stack

jobs:
- job: Stack Build in Linux
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 3
    matrix:
      lts12:
        BUILD: stack
        RESOLVER: lts-12
      lts11:
        BUILD: stack
        RESOLVER: lts-11
      lts-10:
        BUILD: stack
        RESOLVER: lts-10
  steps:
  - script: |
      # Emit the value of the var specified as arg only when the build is cabal
      cabal_env() { test "$BUILD" = cabal && echo $1; }

      # If a custom stack-yaml is specified, replace the default with that
      if test -e "$STACK_YAML"; then rm -f stack.yaml && ln -sv $STACK_YAML stack.yaml; else true; fi
      unset STACK_YAML

      # Get packcheck if needed
      CURL=$(which curl)
      PACKCHECK_URL=${PACKCHECK_GITHUB_URL}/${PACKCHECK_GITHUB_COMMIT}/packcheck.sh
      if test ! -e "$PACKCHECK_LOCAL_PATH"; then $CURL -sL -o "$PACKCHECK_LOCAL_PATH" $PACKCHECK_URL; fi;
      chmod +x $PACKCHECK_LOCAL_PATH

      SPATH=$(stack path --bin-path)
      echo STACK PATH: $SPATH
      # This script is governed by various PACKCHECK envvars that are set above.
      # In addition, hpc-coveralls needs TRAVIS, TRAVIS_JOB_ID variables set by
      # the travis CI environment.
      bash -c "$PACKCHECK_LOCAL_PATH $BUILD PATH=$SPATH:/bin:/usr/bin"
    displayName: 'Setup Build tools'
- job: Cabal Build in Linux
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 2
    matrix:
      ghc-8.0:
        BUILD: new-build
        GHCVER: 8.4.4
        CABALVER: 2.4
      ghc-8.6:
        BUILD: new-build
        GHCVER: 8.2.2
        CABALVER: 2.4
  steps:
  - script: |
      sudo apt-get install software-properties-common
      sudo add-apt-repository -y ppa:hvr/ghc
      sudo apt-get update
      sudo apt-get install ghc-8.0.1 cabal-1.24 alex-3.1.7 happy-1.19.5
      # Emit the value of the var specified as arg only when the build is cabal
      cabal_env() { test "$BUILD" = cabal && echo $1; }

      # Get packcheck if needed
      CURL=$(which curl)
      PACKCHECK_URL=${PACKCHECK_GITHUB_URL}/${PACKCHECK_GITHUB_COMMIT}/packcheck.sh
      if test ! -e "$PACKCHECK_LOCAL_PATH"; then $CURL -sL -o "$PACKCHECK_LOCAL_PATH" $PACKCHECK_URL; fi;
      chmod +x $PACKCHECK_LOCAL_PATH

      # This script is governed by various PACKCHECK envvars that are set above.
      # In addition, hpc-coveralls needs TRAVIS, TRAVIS_JOB_ID variables set by
      # the travis CI environment.
      bash -c "$PACKCHECK_LOCAL_PATH $BUILD PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:/opt:/bin:/usr/bin"
    displayName: 'Setup Build tools'

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: echo hello from macOS
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: echo hello from Windows
